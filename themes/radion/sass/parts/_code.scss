// Define language colors map
$language-colors: (
  "js": #e9c92c,
  "shell": #4eaa25,
  "json": dodgerblue,
  "python": #3572A5,
  "css": #264de4,
  // Official Go color
  "go": #00ADD8,
  "markdown": #0000ff,
  // Adjusted to match Rust's branding
  "rust": #ff4647,
  // Oracle Java color
  "java": #f89820,
  "csharp": #178600,
  "ruby": #701516,
  "swift": #f05138,
  "php": #777bb4,
  "typescript": #3178c6,
  "scala": #c22d40,
  "kotlin": #F18E33,
  "lua": #000080,
  "perl": #0298c3,
  "haskell": #5e5086,
  "r": #198ce7,
  "dart": #00d2b8,
  "elixir": #6e4a7e,
  "clojure": #5881d8,
  "sql": #ffcc00,
  "bash": #4f8f00,
  "text": #151b23,
  "gd": #3c76a2,
  "cpp": #5d8dbf,
  "toml": #9c4221,
  "default":#151b23,
);

/// Function to get text color based on background brightness
/// @param {Color} $color - The background color
@function get-text-color($color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);
  $brightness: (
    $r * 0.299 + $g * 0.587 + $b * 0.114
  );

@if ($brightness > 128) {
  @return #000000; // Use black for bright backgrounds
}

@else {
  @return #ffffff; // Use white for dark backgrounds
}
}

/// Mixin for language label styles
@mixin base-label-style($language) {
  $color-info: map-get($language-colors, $language);
  $bg-color: nth($color-info, 1);
  $text-color: get-text-color($bg-color);

  background: $bg-color;
  color: $text-color;
  border-radius: 0.25rem;
  font-size: 12px;
  font-weight: bold;
  padding: 0.2rem 0.5rem;
  text-transform: uppercase;
  position: absolute;
  top: 5px;
  left: 5px; // Positioned at the top-left
  z-index: 10; // Ensure it's above the code content
}

// Language label styles
.code-label {
  @each $language, $_ in $language-colors {
    &.label-#{$language} {
      @include base-label-style($language);
    }
  }
}

// Clipboard button styles
.clipboard-button {
  cursor: pointer;
  position: absolute;
  top: 5px;
  right: 5px;
  z-index: 10;
  background-color: transparent;
  border: "#3D444D";
  border-radius: 3px;

  svg {
    fill: #9198A1;
    width: 16px;
    height: 16px;
  }
}

.light .clipboard-button {
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0.5);
  background-color: #f3f3f3;
}

pre {
  background-color: var(--bg-primary) !important;
  border-radius: 5px;
  border: none;
  line-height: 1.4;
  padding-top: 1.8em;
  padding-bottom: 1em;
  position: relative;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;

  code {
    background-color: transparent !important;
    color: inherit;
    border: none;
    padding: 0 !important;

    table td {
      padding: 0.4em;
    }
  }
}

.light code table td {
  color: #ffffff !important;
}

pre code table mark {
  color: unset;
  padding: 0;
  background-color: #204e8a !important;
  filter: brightness(1.1);
}

pre::-webkit-scrollbar {
  height: 8px;
}

pre::-webkit-scrollbar-thumb {
  background-color: #3D444D;
  border-radius: 4px;
}

pre::-webkit-scrollbar-track {
  background-color: #1E222A;
}

a {
  code:hover {
    background-color: transparent;
    background: transparent !important;
  }
}

code {
  background-color: var(--bg-primary);
}

code,
pre,
kbd,
samp {
  font-size: 1.05em;
  /* slightly larger than the surrounding text */
  line-height: 1.6;
}
